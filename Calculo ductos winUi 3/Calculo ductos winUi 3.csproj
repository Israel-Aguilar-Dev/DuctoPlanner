<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net8.0-windows10.0.19041.0</TargetFramework>
    <TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>
    <RootNamespace>Calculo_ductos_winUi_3</RootNamespace>
    <Platforms>x86;x64</Platforms>
    <RuntimeIdentifiers>win-x86;win-x64</RuntimeIdentifiers>
    <PublishProfile>win-$(Platform).pubxml</PublishProfile>
    <UseWinUI>true</UseWinUI>
    <EnableMsixTooling>true</EnableMsixTooling>
    <Nullable>enable</Nullable>
  </PropertyGroup>
  <ItemGroup>
    <Content Remove="Assets\Ducts.json" />
    <Content Remove="Assets\IconoVertical-VERDE.png" />
    <Content Remove="Assets\logovertical.jpg" />
    <Content Remove="Assets\torre.png" />
    <Content Remove="Assets\torre2.png" />
    <Content Remove="Assets\Vertical.png" />
  </ItemGroup>
  <ItemGroup>
    <None Remove="Views\CalculateDuctsView.xaml" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="Assets\SplashScreen.scale-200.png" />
    <Content Include="Assets\LockScreenLogo.scale-200.png" />
    <Content Include="Assets\Square150x150Logo.scale-200.png" />
    <Content Include="Assets\Square44x44Logo.scale-200.png" />
    <Content Include="Assets\Square44x44Logo.targetsize-24_altform-unplated.png" />
    <Content Include="Assets\StoreLogo.png" />
    <Content Include="Assets\Wide310x150Logo.scale-200.png" />
    <Content Include="Icono Vertical - VERDE.ico" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="Assets\Ducts.json">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <Manifest Include="$(ApplicationManifest)" />
  </ItemGroup>

  <!--
    Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
    Tools extension to be activated for this project even if the Windows App SDK Nuget
    package has not yet been restored.
  -->
  <ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
    <ProjectCapability Include="Msix" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Aspose.Cells" Version="25.4.0" />
    <PackageReference Include="ClosedXML" Version="0.104.2" />
    <PackageReference Include="CommunityToolkit.Mvvm" Version="8.4.0" />
    <PackageReference Include="CommunityToolkit.WinUI.UI.Controls.DataGrid" Version="7.1.2" />
    <PackageReference Include="Microsoft.Windows.SDK.BuildTools" Version="10.0.26100.1742" />
    <PackageReference Include="Microsoft.WindowsAppSDK" Version="1.6.241114003" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="Calculo ductos">
      <HintPath>..\..\Calculo de ductos v1\Calculo ductos\bin\Debug\net8.0\Calculo ductos.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Views\CalculateDuctsView - Copia.xaml">
      <SubType>Designer</SubType>
    </Page>
    <Page Update="Views\CalculateDuctsView.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Assets\Tiles\" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Models\FloorDuctDetailModel.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Update="Assets\IconoVertical-VERDE.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <!--
    Defining the "HasPackageAndPublishMenuAddedByProject" property here allows the Solution
    Explorer "Package and Publish" context menu entry to be enabled for this project even if
    the Windows App SDK Nuget package has not yet been restored.
  -->
  <PropertyGroup Label="Globals">
    <HasPackageAndPublishMenu>true</HasPackageAndPublishMenu>
    <AppxPackage>true</AppxPackage>
    <WindowsPackageType>MSIX</WindowsPackageType>
  </PropertyGroup>

  <!-- Publish Properties -->
  <PropertyGroup>
    <PublishReadyToRun Condition="'$(Configuration)' == 'Debug'">False</PublishReadyToRun>
    <PublishReadyToRun Condition="'$(Configuration)' != 'Debug'">True</PublishReadyToRun>
    <PublishTrimmed Condition="'$(Configuration)' == 'Debug'">False</PublishTrimmed>
    <PublishTrimmed Condition="'$(Configuration)' != 'Debug'">True</PublishTrimmed>
    <ApplicationIcon>Icono Vertical - VERDE.ico</ApplicationIcon>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <AssemblyName></AssemblyName>
    <GenerateAppInstallerFile>True</GenerateAppInstallerFile>
    <AppxPackageSigningEnabled>True</AppxPackageSigningEnabled>
    <PackageCertificateThumbprint>91A00ABF03DE06A491135BA40745B7564058C536</PackageCertificateThumbprint>
    <AppxPackageSigningTimestampDigestAlgorithm>SHA256</AppxPackageSigningTimestampDigestAlgorithm>
    <AppxAutoIncrementPackageRevision>True</AppxAutoIncrementPackageRevision>
    <AppxPackageDir>C:\Repos\Calculo ductos winUi 3\publish\</AppxPackageDir>
    <AppxSymbolPackageEnabled>False</AppxSymbolPackageEnabled>
    <GenerateTestArtifacts>True</GenerateTestArtifacts>
    <AppxBundle>Never</AppxBundle>
    <AppInstallerUri>http://192.168.10.228:8092/CotizadorVertical/</AppInstallerUri>
    <HoursBetweenUpdateChecks>0</HoursBetweenUpdateChecks>
  </PropertyGroup>
</Project>